{"version":3,"sources":["components/jumbotron.js","components/top_ten_list.js","components/types_charts.js","components/pokedex.js","components/gen_charts.js","components/search.js","components/scrollbutton.js","components/master.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","className","TopTenList","pkmnList","title","pkmnData","pkmn","i","length","push","alt","src","headings","map","value","index","key","TypesChart","useState","chart1Data","setChart1Data","chart2Data","setChart2Data","options","num","display","text","fontSize","legend","fillStyle","useEffect","typesData","types1_freq","labels","types","datasets","label","data","backgroundColor","colours","borderWidth","borderColor","typesList","typeNum","chart2","types2_freq","Pokedex","pkmn_list","pokemon","master_list","pokemon_div","property","Object","hasOwnProperty","call","element","j","create_pokedex","GenCharts","chartData","setChartData","gen1","gen2","gen3","gen4","gen5","gen6","scales","xAxes","ticks","min","max","yAxes","Search","listOfPokemon","search","setSearch","showPokemon","setShowPokemon","isAppearing","useSpring","onSubmit","e","pokemonNames","document","getElementsByClassName","pokemonType1","pokemonType2","pokemonDivs","preventDefault","innerText","toLowerCase","includes","style","type","id","placeholder","onChange","event","target","ScrollButton","visible","setVisible","window","addEventListener","scrolled","documentElement","scrollTop","onClick","scrollTo","top","behavior","xmlns","width","height","fill","class","viewBox","fill-rule","d","Master","showLists","setShowLists","showTypeCharts","setShowTypeCharts","fadeLists","fadeCharts","div","hp","fastest","strongest","defense","legendary","non_legendary","pokedex_151","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c4aa59c.chunk.js","sourcesContent":["import React from 'react';\nconst Jumbotron = () => {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container-fluid\">\n                <div className=\"row justify-content-center\">\n                    <h1 className=\"col-xs-12\">PokeStats</h1>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <h3 className=\"col-xs-12\">Pokemon by numbers</h3>\n                </div>\n                <hr className=\"col-xs-12\"></hr>\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from 'react';\r\n\r\nfunction headings(pkmnData) {\r\n    let pkmn = [];\r\n    for (let i=0; i<pkmnData.length; i++) {\r\n        pkmn.push(    \r\n                <tr>\r\n                    <td className=\"pkmn-images\">\r\n                        <img alt=\"pkmn\" className=\"pokemon-images\" src={`/images/icons/${pkmnData[i][1]}.png`}></img>\r\n                    </td>\r\n                    <td className=\"pkmn-name\">{pkmnData[i][0]}</td>\r\n                    <td className=\"pkmn-stat\">{pkmnData[i][2]}</td>\r\n                </tr>\r\n        );            \r\n    }\r\n    return pkmn;\r\n}\r\n\r\nconst TopTenList = ({pkmnList, title}) => {\r\n    return ( \r\n        <div className=\"topList\">\r\n            <h4 className=\"title\">Top 10 {title}</h4>\r\n            <ol>\r\n                {headings(pkmnList).map((value, index) => {\r\n                    return <li key={index}>{value}</li>\r\n                })} \r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopTenList;","import {useState, useEffect} from 'react';\r\nimport React from 'react';\r\nimport types from '../data/types.json';\r\nimport types1_freq from '../data/types1_freq.json';\r\nimport types2_freq from '../data/types2_freq.json';\r\nimport colours from '../data/chart_colours.json';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\n\r\nconst TypesChart = () => {\r\n    const [chart1Data, setChart1Data] = useState({});\r\n    const [chart2Data, setChart2Data] = useState({});\r\n    let options = (num) => {\r\n        return {title: {\r\n            display: true,\r\n            text: `Number of Pokemon by Type ${num}`,\r\n            fontSize: 18\r\n        },\r\n        legend: {\r\n            display: true,\r\n            fillStyle: 'rgb(0,48,143,1.0)'\r\n        }}\r\n    } \r\n    const chart1 = (typesList, typesData, typeNum) => {\r\n        setChart1Data({\r\n            labels: typesList,\r\n            datasets: [\r\n                {\r\n                    label: `Number of Pokemon by Type ${typeNum}`,\r\n                    data: typesData,\r\n                    backgroundColor: colours,\r\n                    borderWidth: 3,\r\n                    borderColor: colours\r\n                    \r\n                } \r\n            ]\r\n            \r\n        });\r\n    }\r\n\r\n    const chart2 = (typesList, typesData, typeNum) => {\r\n        setChart2Data({\r\n            labels: typesList,\r\n            datasets: [\r\n                {\r\n                    label: `Number of Pokemon by Type ${typeNum}`,\r\n                    data: typesData,\r\n                    backgroundColor: colours,\r\n                    borderWidth: 3,\r\n                    borderColor: colours \r\n                } \r\n            ]\r\n            \r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        chart1(types, types1_freq, '1');\r\n        chart2(types, types2_freq, '2');\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"chartsDiv\">\r\n            <div className=\"chart\">\r\n                <Bar data={chart1Data} options={options(\"1\")}></Bar>\r\n            </div>\r\n            <div className=\"chart\">\r\n                <Bar data={chart2Data}  options={options(\"2\")}></Bar>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TypesChart;","import React from 'react';\r\n\r\nconst Pokedex = ({pkmn_list}) => {\r\n    function create_pokedex(pokemon) {\r\n        let master_list = [];\r\n        let pokemon_div = [];\r\n        for (const property in pokemon) {\r\n            let pkmn = [];\r\n            if (Object.hasOwnProperty.call(pokemon, property)) {\r\n                const element = pokemon[property];\r\n                for (const key in element) {\r\n                    if (Object.hasOwnProperty.call(element, key)) {\r\n                        const value = element[key];\r\n                        pkmn.push(\r\n                            <span>{value}</span>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            master_list.push(pkmn);\r\n        }\r\n       \r\n        for (let j = 0; j < master_list[0].length; j++) {\r\n            pokemon_div.push(\r\n                <ul className=\"pokedex-list\">\r\n                    <li><img alt={master_list[0][j]} className=\"pokedex-images\" src={`/images/icons/${j+1}.png`}></img></li>\r\n                    <li className=\"pokemon-name\">{master_list[0][j]}{\" #\"}{master_list[1][j]}</li>\r\n                    <li><span className=\"type1\">{master_list[2][j]}</span>{\" \"}<span className=\"type2\">{master_list[3][j]}</span></li>\r\n                    <li>{\"HP: \"}{master_list[4][j]}</li>\r\n                    <li>{\"Attack: \"}{master_list[5][j]}</li>\r\n                    <li>{\"Speed: \"}{master_list[6][j]}</li>\r\n                    <li>{\"Defense: \"}{master_list[7][j]}</li>\r\n                </ul>\r\n            );\r\n        }\r\n        return pokemon_div;\r\n    }\r\n    \r\n    return ( \r\n        <div className=\"pokedex151-element\">\r\n            {create_pokedex(pkmn_list).map((value, index) => {\r\n                    return <span key={index}>{value}</span>\r\n            })} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokedex;","import {useState, useEffect} from 'react';\r\nimport React from 'react';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport gen1 from '../data/gen_data/gen_1.json';\r\nimport gen2 from '../data/gen_data/gen_2.json';\r\nimport gen3 from '../data/gen_data/gen_3.json';\r\nimport gen4 from '../data/gen_data/gen_4.json';\r\nimport gen5 from '../data/gen_data/gen_5.json';\r\nimport gen6 from '../data/gen_data/gen_6.json';\r\nimport labels from '../data/gen_data/labels.json';\r\n\r\nconst GenCharts = () => {\r\n    const [chartData, setChartData] = useState({});\r\n\r\n    const options = {\r\n        scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                    min: 50, max: 85\r\n                    \r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    min: 50, max: 85\r\n                    \r\n                }\r\n            }],\r\n            \r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Average Stats of Gens 1 to 6',\r\n            fontSize: 18\r\n        },\r\n        legend: {\r\n            display: true\r\n        }\r\n       \r\n    }\r\n    const gen_chart = (chartLabels) => {\r\n        setChartData({\r\n            labels: chartLabels,\r\n            datasets: [\r\n                {\r\n                    label: `Average of Gen 1`,\r\n                    data: gen1,\r\n                    backgroundColor:  \"rgba(255, 99, 132, 0.6)\",\r\n                    borderWidth: 3,\r\n                    borderColor:  \"rgba(255, 99, 132, 0.6)\"\r\n                    \r\n                },\r\n                {\r\n                    label: `Average of Gen 2`,\r\n                    data: gen2,\r\n                    backgroundColor: \"rgba(54, 162, 235, 0.6)\",\r\n                    borderWidth: 3,\r\n                    borderColor: \"rgba(54, 162, 235, 0.6)\"\r\n                    \r\n                },\r\n                {\r\n                    label: `Average of Gen 3`,\r\n                    data: gen3,\r\n                    backgroundColor: \"rgba(255, 206, 86, 0.6)\",\r\n                    borderWidth: 3,\r\n                    borderColor: \"rgba(255, 206, 86, 0.6)\"\r\n                    \r\n                },\r\n                {\r\n                    label: `Average of Gen 4`,\r\n                    data: gen4,\r\n                    backgroundColor: \"rgba(75, 192, 192, 0.6)\",\r\n                    borderWidth: 3,\r\n                    borderColor: \"rgba(75, 192, 192, 0.6)\"\r\n                    \r\n                },\r\n                {\r\n                    label: `Average of Gen 5`,\r\n                    data: gen5,\r\n                    backgroundColor: \"rgba(153, 102, 255, 0.6)\",\r\n                    borderWidth: 3,\r\n                    borderColor: \"rgba(153, 102, 255, 0.6)\"\r\n                    \r\n                },\r\n                {\r\n                    label: `Average of Gen 6`,\r\n                    data: gen6,\r\n                    backgroundColor: \"rgba(255, 159, 64, 0.6)\",\r\n                    borderWidth: 3,\r\n                    borderColor: \"rgba(255, 159, 64, 0.6)\"\r\n                    \r\n                }      \r\n            ]\r\n            \r\n            \r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        gen_chart(labels);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"chartsDiv\">\r\n            <div className=\"chart\">\r\n                <HorizontalBar data={chartData} options={options}></HorizontalBar>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenCharts;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSpring } from 'react-spring';\r\n\r\nconst Search = ({listOfPokemon}) => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showPokemon, setShowPokemon] = useState(false);\r\n    const isAppearing = useSpring(\r\n        {display: showPokemon ? 'inline-block' : 'none'},\r\n    );\r\n    const handleSearch = (event) => {\r\n        setSearch(event.target.value);\r\n    };\r\n    const filterEvent = (e) => {\r\n        let pokemonNames = document.getElementsByClassName('pokemon-name');\r\n        let pokemonType1 = document.getElementsByClassName('type1');\r\n        let pokemonType2 = document.getElementsByClassName('type2');\r\n        let pokemonDivs = document.getElementsByClassName('pokedex-list');\r\n        e.preventDefault();\r\n        for (let i=0;i<pokemonNames.length;i++) {\r\n            if (pokemonNames[i].innerText.toLowerCase().includes(search.toLowerCase()) || \r\n                pokemonType1[i].innerText.toLowerCase().includes(search.toLowerCase()) ||\r\n                pokemonType2[i].innerText.toLowerCase().includes(search.toLowerCase())) \r\n            {\r\n                setShowPokemon(!showPokemon);\r\n                pokemonDivs[i].style = isAppearing;\r\n            }\r\n            else {\r\n                pokemonDivs[i].style.display = 'none';\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-sm-12\">\r\n            <form onSubmit={filterEvent} type=\"submit\">\r\n                <div className=\"form-group\">\r\n                    <input type=\"search\" className=\"form-control\" id=\"searchPokemonInput\" \r\n                        placeholder=\"Search Pokedex...\" onChange={handleSearch}>\r\n                    </input>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Search;","import React, {useState} from 'react';\r\n  \r\nconst ScrollButton = () =>{\r\n  \r\n  const [visible, setVisible] = useState(false);\r\n  \r\n  const toggleVisible = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > 300){\r\n      setVisible(true);\r\n    } \r\n    else if (scrolled <= 300){\r\n      setVisible(false);\r\n    }\r\n  };\r\n  \r\n  const scrollToTop = () =>{\r\n    window.scrollTo({\r\n      top: 0, \r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n  \r\n  window.addEventListener('scroll', toggleVisible);\r\n  \r\n  return (\r\n    <div className=\"scroll-top-container\" onClick={scrollToTop} style={{display: visible ? 'inline' : 'none'}}>\r\n        <button className=\"scroll-top-button\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-up\" viewBox=\"0 0 16 16\">\r\n            <path fill-rule=\"evenodd\" d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"/>\r\n        </svg>\r\n        </button>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default ScrollButton;","import React from 'react';\nimport fastest from '../data/top_10_speed.json';\nimport strongest from '../data/top_10_attack.json';\nimport hp from '../data/top_10_hp.json';\nimport defense from '../data/top_10_defense.json';\nimport non_legendary from '../data/top_10_non_legendary.json';\nimport legendary from '../data/top_10_legendary.json';\nimport pokedex_151 from '../data/pokedex_151.json';\nimport TopTenList from './top_ten_list.js';\nimport TypesChart from './types_charts.js';\nimport Pokedex from './pokedex.js';\nimport { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport GenCharts from './gen_charts';\nimport Search from './search';\nimport ScrollButton from './scrollbutton';\n\nconst Master = () => {\n    const [showLists, setShowLists] = useState(false);\n    const [showTypeCharts, setShowTypeCharts] = useState(false);\n    const fadeLists = useSpring(\n        {display: showLists ? 'inline-block' : 'none'},\n    );\n    const fadeCharts = useSpring( \n        {display: showTypeCharts ? 'inline-block' : 'none'}\n    );\n    let listEvent = (e) => {\n        e.preventDefault()\n        setShowLists(!showLists);\n        setShowTypeCharts(showTypeCharts ? !showTypeCharts : showTypeCharts);\n    }\n    let chartEvent = (e) => {\n        e.preventDefault()\n        setShowTypeCharts(!showTypeCharts);\n        setShowLists(showLists ? !showLists : showLists);\n    }\n    \n    return (\n        <div className=\"main-div\">\n            <div className=\"container-fluid buttons-container\">\n                <div className=\"buttons-div row justify-content-center\">\n                    <button onClick={listEvent} className=\"top10btn col-xs-6 col-md-3\">Top 10 Pokemon</button>\n                    <button onClick={chartEvent} className=\"chartbtn col-xs-6 col-md-3 offset-md-2\">Pokemon Charts</button>\n                </div>\n            </div>\n            \n            <animated.div style={fadeLists} className=\"lists container-fluid\">\n                <div className=\"listRow row\">\n                    <div className=\"list\">\n                        <TopTenList pkmnList={hp} title=\"by HP\" />\n                    </div>\n                    <div className=\"list\">\n                        <TopTenList pkmnList={fastest} title=\"by Speed\" />\n                    </div>\n                    <div className=\"list\">\n                        <TopTenList pkmnList={strongest} title=\"by Attack\" />\n                    </div>\n                    <div className=\"list\">\n                        <TopTenList pkmnList={defense} title=\"by Defense\" />\n                    </div>\n                    <div className=\"list\">\n                        <TopTenList pkmnList={legendary} title=\"Legendary\" />\n                    </div>\n                    <div className=\"list\">\n                        <TopTenList pkmnList={non_legendary} title=\"Non-Legendary\" />\n                    </div>\n                </div>\n            </animated.div>\n            <animated.div style={fadeCharts} className=\"graphs container container-fluid\">\n                <TypesChart /> \n                <GenCharts />\n            </animated.div>\n            \n            <div className=\"search-pokedex container-fluid mt-4\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-lg-4 col-lg-offset-4\">\n                        <Search listOfPokemon={pokedex_151} />\n                    </div>\n                </div>\n            </div>\n           \n            <div className=\"pokedex151-container container-fluid\">\n                <div className=\"pokedex151-row row justify-content-center\">\n                    <Pokedex pkmn_list={pokedex_151}/>\n                </div>\n            </div>\n            <div>\n                <ScrollButton />\n            </div>\n        </div>\n    )\n}\n\nexport default Master;\n\n\n\n/*  */","// import logo from './logo.svg';\nimport './App.css';\nimport Jumbotron from './components/jumbotron';\nimport Master from './components/master';\nimport React from 'react';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Jumbotron />\n      <Master />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}